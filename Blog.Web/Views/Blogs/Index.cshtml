@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager
@model Blog.Web.Models.ViewModels.BlogDetailsViewModel

@{
    ViewData["Title"] = Model.PageTitle + " - Eat Pray Garden";
}

<meta name="description" content="Read the latest blog here." />

<div class="container" style="padding-top: 6em;">
    <div class="row justify-content-center pt-5">
        <div class="col-12 col-lg-8">

            @if (Model != null)
            {
                <h1 class="mb-3">@Model.Heading</h1>

                @* <div class="d-flex justify-content-between mb-3">
                    <span class="text-secondary">By: @Model.Author</span>
                    <span class="text-secondary">@Model.PublishedDate.Date.ToShortDateString()</span>
                </div> *@

                <div class="mb-3 d-flex justify-content-between">
                    @if (signInManager.IsSignedIn(User))
                    {
                        @if (Model.Liked)
                        {
                            <a style="cursor: pointer;">
                                <i class="bi bi-hand-thumbs-up-fill"></i>
                                <span id="totalLikes">@Model.TotalLikes&nbsp;Likes</span>
                            </a>
                            
                        }
                        else
                        {
                            <a id="btnLike" style="cursor: pointer;">
                                <i class="bi bi-hand-thumbs-up"></i>
                                <span id="totalLikes">@Model.TotalLikes&nbsp;Likes</span>
                            </a>
                            
                        }
                        <span class="text-secondary">@Model.PublishedDate.Date.ToShortDateString()</span>
                    }
                    else
                    {
                        <span id="totalLikes">@Model.TotalLikes&nbsp;Likes</span>
                        <span class="text-secondary">@Model.PublishedDate.Date.ToShortDateString()</span>
                    }
                    

                    @* <span id="totalLikes">@Model.TotalLikes</span> Likes *@

                </div>

                

                <img src="@Model.FeaturedImageUrl" class="d-block img-fluid mb-5"/>

                <div class="mb-3 blog-details-content" style="background-color: white; border: 2em solid white;">
                    @Html.Raw(@Model.Content)
                    <div class="mb-3 d-flex" style="margin-top: 2em;">
                        @foreach (var tag in Model.Tags)
                        {
                            <span class="badge bg-secondary me-1">@tag.Name</span>
                        }
                    </div>
                </div>

                

                <div class="card blog-comment-container">
                    <div class="card-header">
                        <h5>Comments</h5>

                        @if (signInManager.IsSignedIn(User))
                        {
                            <form method="post">
                                <div class="mb-3">
                                    <label class="form-label">Comment Description</label>
                                    <input type="text" class="form-control" asp-for="CommentDescription"/>
                                </div>

                                <div class="mb-3">
                                    <button type="submit" class="btn btn-dark">Submit</button>
                                    <input type="hidden" asp-for="Id"/>
                                    <input type="hidden" asp-for="UrlHandle" />
                                </div>
                            </form>
                        }
                    </div>
                    <div class="card-body">
                        @if (Model.Comments != null && Model.Comments.Any())
                        {
                            @foreach (var comment in Model.Comments)
                            {
                                <div class="card mb-3">
                                    <div class="card-body">                                      
                                        <div class="d-flex justify-content-between">
                                            <span class="text-secondary">@comment.UserName</span>
                                            <span class="text-secondary flex-end">@comment.DateAdded.ToShortDateString()</span>
                                        </div>
                                        <div>
                                            @comment.Description
                                        </div>
                                    </div>
                                </div>
                            }                            
                        }
                    </div>
                </div>

                
            }
            else
            {
                <p>Blog post not found</p>
            }

        </div>
    </div>
</div>


@section Scripts {
    <script>

        const btnLikeElement = document.getElementById('btnLike');
        const totalLikeElement = document.getElementById('totalLikes');

        async function getTotalLikes() {
            fetch('/api/blogPostLike/@Model.Id/totalLikes', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                },

            })
                .then(data => data.json())
                .then(result => totalLikeElement.innerHTML = result);
        }

        async function addLikeForBlog() {
            fetch('/api/BlogPostLike/Add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                },
                body: JSON.stringify({
                    blogPostId: '@Model.Id',
                    userId: '@userManager.GetUserId(User)'
                })

            }).then(() => {
                btnLikeElement.innerHTML = '<i class="bi bi-hand-thumbs-up-fill"></i>';
                btnLikeElement.removeEventListener('click', addLikeForBlog);
                getTotalLikes();
            });
        }

        btnLikeElement.addEventListener('click', addLikeForBlog);

    </script>
}